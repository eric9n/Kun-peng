name: "publish"

on:
  push:
    branches:
      - release

# This is the example from the readme.
# On each push to the `release` branch it will create or update a GitHub release, build your app, and upload the artifacts to the release.
env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --release

      # Set up the GitHub CLI
      - name: Install GitHub CLI
        run: |
          brew install gh
        if: matrix.platform == 'macos-latest'

      - name: Install GitHub CLI
        run: |
          sudo apt install -y gh
        if: matrix.platform == 'ubuntu-20.04'

      - name: Install GitHub CLI
        run: |
          choco install gh
        if: matrix.platform == 'windows-latest'

      # Log in to the GitHub CLI
      - name: Login to GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      # Create a release
      - name: Create Release
        id: create_release
        run: |
          gh release create ${{ github.ref_name }} \
            --title "Release ${{ github.ref_name }}" \
            --notes "Release notes for ${{ github.ref_name }}" \
            --draft
        shell: bash

      - name: Prepare asset name
        id: prep
        run: |
          PLATFORM_TAG=$(echo ${{ matrix.platform }} | sed -e 's/-latest//' -e 's/ubuntu-20.04/linux-x86_64/' -e 's/macos/macos-x86_64/' -e 's/windows/windows-x86_64/')
          echo "ASSET_NAME=ncbi-$PLATFORM_TAG$(if [ ${{ runner.os }} = 'Windows' ]; then echo '.exe'; fi)" >> $GITHUB_ENV
        shell: bash

      - name: Upload Release Asset
        run: |
          gh release upload ${{ github.ref_name }} \
            ./target/release/${{ env.ASSET_NAME }} \
            --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
